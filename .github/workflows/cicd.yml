name: Contact-Book CI/CD

on:
  push:
    branches:
      - main  # Runs workflow when code is pushed to 'main' branch
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Backend Dependencies
        run: |
          cd Backend
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Backend Tests
        run: |
          cd Backend
          pytest  # Ensure you have tests in place

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Backend Image
        run: |
          cd Backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/contact-book-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/contact-book-backend:latest

      - name: Build and Push Frontend Image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/contact-book-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/contact-book-frontend:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/contact-book-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/contact-book-frontend:latest
            docker-compose up -d
